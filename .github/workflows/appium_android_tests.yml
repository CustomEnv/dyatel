name: Android Web Tests with Appium

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  android-tests:
    name: Run Appium Web Tests on Android
    runs-on: ubuntu-latest

    services:
      appium:
        image: appium/appium
        ports:
          - 4723:4723
        options: >-
          --health-cmd "curl -s http://localhost:4723/status || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
        volumes:
          - ${{ env.ANDROID_HOME }}/platform-tools:/opt/android/platform-tools

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Setup tests
        run: |
          python -m pip install --upgrade pip
          pip install tox==3.28.0

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set Up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android Licenses
        run: yes | sdkmanager --licenses || true

      - name: Set Environment Variables
        run: |
          echo "ANDROID_AVD_HOME=$HOME/.android/avd" >> $GITHUB_ENV
          echo "ANDROID_SDK_HOME=$HOME/.android" >> $GITHUB_ENV

      - name: Install Android Dependencies
        run: |
          sdkmanager "platform-tools" "platforms;android-34" "emulator" "system-images;android-34;google_apis;x86_64"
          echo "no" | avdmanager create avd -n testAVD -k "system-images;android-34;google_apis;x86_64" --device "pixel_4" --force

      - name: List Available AVDs
        run: |
          avdmanager list avd
          ls /home/runner/.config/.android/avd

      - name: Start Android Emulator (Optimized)
        env:
          ANDROID_AVD_HOME: /home/runner/.config/.android/avd
        run: |
          # Start emulator with minimal options for faster boot
          nohup $ANDROID_HOME/emulator/emulator -avd testAVD -no-window -no-audio -gpu off -accel off -no-snapshot-save -no-snapshot-load -no-boot-anim -netdelay none -netspeed full -verbose &
          
          # Wait for the emulator to become available for adb
          adb wait-for-device

          # Ensure the emulator is fully booted
          adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'

          # Optionally wait for additional time to ensure readiness
          sleep 30

      - name: Extract Emulator Details
        run: |
          sdkmanager "emulator"
          find $ANDROID_HOME -name "emulator"
          echo "AVD_NAME=$(cat $ANDROID_AVD_HOME/testAVD.avd/config.ini | grep 'AvdId' | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "DEVICE_NAME=$(adb shell getprop ro.product.model)" >> $GITHUB_ENV
          echo "PLATFORM_VERSION=$(adb shell getprop ro.build.version.release)" >> $GITHUB_ENV

      - name: Run Appium Web Tests
        run: |
          # Ensure Appium server is ready before running the tests
          curl --retry 10 --retry-delay 5 --max-time 60 http://localhost:4723/status

          # Run tests
          tox -e py38-android-web -- -k test_wait_element_text1
