name: Functional Tests

on:
  push:
    branches:
      - '**'  # Trigger on push to any branch

jobs:
  test:
    env:
      CI: true
      ANDROID_AVD: emulator
      APPIUM_TEST_SERVER_PORT: 4567
      APPIUM_TEST_SERVER_HOST: 127.0.0.1
      _FORCE_LOGS: 1
      TEST_PASS_THRESHOLD: 10
      API_LEVEL: 32
      EMU_TAG: google_apis
      ARCH: x86_64

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          check-latest: true

      - run: curl -sSL https://bit.ly/install-xq | sudo bash

      - name: Install dev dependencies
        run: |
          npm install mocha-multi-reporters --save-dev
          npm install -g appium
          npm install --no-save mjpeg-consumer

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.API_LEVEL }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          avd-name: ${{ env.ANDROID_AVD }}
          force-avd-creation: false
          api-level: ${{ env.API_LEVEL }}
          disable-spellchecker: true
          target: ${{ env.EMU_TAG }}
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          arch: ${{ env.ARCH }}
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: Start Appium server
        run: |
          cwd=$(pwd)
          pushd "$cwd"
          cd ~
          appium driver install --source=local "$cwd"
          appium driver doctor uiautomator2
          nohup appium server \
            --port=$APPIUM_TEST_SERVER_PORT \
            --address=$APPIUM_TEST_SERVER_HOST \
            --relaxed-security \
            --log-no-colors \
            --log-timestamp \
            2>&1 > "$cwd/appium.log" &
          popd

      - name: e2e_api${{ env.API_LEVEL }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          script: ./gradlew connectedCheck
          avd-name: ${{ env.ANDROID_AVD }}
          force-avd-creation: false
          api-level: ${{ env.API_LEVEL }}
          disable-spellchecker: true
          disable-animations: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          target: ${{ env.EMU_TAG }}
          arch: ${{ env.ARCH }}