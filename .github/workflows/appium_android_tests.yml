name: Android Web Tests with Appium

on:
  push:
    branches:
      - '**'

jobs:
  android-tests:
    name: Run Appium Web Tests on Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js and Install Appium
        run: |
          sudo apt-get update
          sudo apt-get install -y npm
          sudo npm install -g appium

      - name: Install UiAutomator2 Driver
        run: |
          appium driver install uiautomator2

      - name: Start Appium Server in the Background
        run: |
          nohup appium --allow-insecure chromedriver_autodownload > appium.log 2>&1 &

      - name: Install appium-doctor
        run: |
          sudo npm install -g appium-doctor

      - name: Run Appium Doctor
        run: |
          appium-doctor

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Setup tests
        run: |
          python -m pip install --upgrade pip
          pip install tox==3.28.0

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set Up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android Licenses
        run: yes | sdkmanager --licenses || true

      - name: Set Environment Variables
        run: |
          echo "ANDROID_AVD_HOME=$HOME/.android/avd" >> $GITHUB_ENV
          echo "ANDROID_SDK_HOME=$HOME/.android" >> $GITHUB_ENV

      - name: Generate ADB Key
        run: |
          mkdir -p ~/.android
          adb keygen ~/.android/adbkey
          echo "ADB key generated successfully."

      - name: Run android emulator inside docker
        run: |
          docker run -d \
              -e ADBKEY="$(cat ~/.android/adbkey)" \
              --device /dev/kvm \
              --publish 8554:8554/tcp \
              --publish 15555:5555/tcp  \
              --name android-emulator \
              --memory 4g --cpus=2 \
              us-docker.pkg.dev/android-emulator-268719/images/30-google-x64:30.1.2 

          # Wait for the emulator to initialize
          echo "Waiting 10 seconds for the container to start..."
          sleep 10
          
          echo "Verifying ADB connection..."
          adb connect localhost:15555
          adb wait-for-device
          
          echo "Waiting for Android system to complete booting..."
          while [ "$(adb shell getprop sys.boot_completed | tr -d '\r')" != "1" ]; do
            echo "Still waiting for boot..."
            sleep 5
          done

          echo "Android Emulator is fully booted and ready!"
          adb devices
          adb shell getprop ro.build.version.release
          
      - name: Chrome browser
        run: |
          echo "Checking initial Chrome browser"
          adb shell "pm list packages | grep chrome"
          echo "Checking Chrome version"
          adb shell dumpsys package com.android.chrome | grep versionName
#          echo "\nStarting Chrome manually"
#          adb shell am start -a android.intent.action.VIEW -d "http://www.google.com" com.android.chrome
#          echo "\nGet logs from Chrome"
#          adb logcat | grep chrome

      - name: Run Appium Doctor
        run: |
          appium-doctor

      - name: Run Appium Web Tests
        run: |
          curl --retry 10 --retry-delay 5 --max-time 60 http://localhost:4723/status
          tox -e py38-android-web -- -k test_wait_element_text1
